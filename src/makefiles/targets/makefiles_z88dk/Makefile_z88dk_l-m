# ------------------------------------------------------------------------------------------
# Z88DK L-M
#

z88dk_targets_l-m: \
	lambda_targets \
	laser500_targets \
	m5_targets \
	mc1000_targets \
	microbee_targets \
	mikro80_targets \
	msx_targets \
	mtx_targets \
	multi8_targets \
	myvision_targets \
	mz_targets \
	mz2500_targets

# ------------------------------------------------------------------------------------------

lambda_targets: \
	lambda_16k

laser500_targets: \
	laser500

m5_targets: \
	m5

mc1000_targets: \
	mc1000_16k_no_gfx mc1000_48k

microbee_targets: \
	microbee_16k_no_gfx microbee_32k

mikro80_targets: \
	mikro80

msx_targets: \
	msx_32k_rom

mtx_targets: \
	mtx

multi8_targets: \
	multi8

myvision_targets: \
	myvision

mz_targets: \
	mz

mz2500_targets: \
	mz2500_tiny_buffered

# ------------------------------------------------------------------------------------------


lambda_16k:
	$(Z88DK_PATH)$(MYZ88DK) +lambda $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-vn -D__LAMBDA__ -DFULL_GAME \
	-DEND_SCREEN -DBETWEEN_LEVEL \
	-DCONIO -DNO_INIT_GRAPHICS \
	-lndos -create-app -o  $(BUILD_PATH)/FULL_lambda_16k.prg \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES)
	rm $(BUILD_PATH)/FULL_lambda_16k.prg


laser500: 	
	$(Z88DK_PATH)$(MYZ88DK) +laser500 $(SCCZ80_OPTS) -vn -Cz--audio \
	-create-app -o laser500.bin \
	$(INCLUDE_OPTS) \
	-D__LASER500__ \
	-DFORCE_BIT_BANG -DSOUNDS \
	-DFULL_GAME \
	-DCONIO -DNO_INIT_GRAPHICS \
	-lndos \
	$(FULL_FILES)
	mv laser500.bin $(BUILD_PATH)/FULL_laser500.bin
	rm laser500.cas
	mv laser500.wav $(BUILD_PATH)/FULL_laser500.wav


	# -compiler=sdcc 
laser500_bitmap: 	
	$(Z88DK_PATH)$(MYZ88DK) +laser500 $(SCCZ80_OPTS) -vn -Cz--audio -v \
	-create-app -o laser500bm.bin \
	$(INCLUDE_OPTS) \
	-D__LASER500__ -DLASER500_BITMAP \
	-DFORCE_BIT_BANG -DSOUNDS -DNO_STATS \
	-DTINY_GAME \
	-DNO_GRAPHICS -DNO_PRINT -DNO_INPUT -DNO_SET_SCREEN_COLORS \
	-lndos \
	$(TINY_FILES) \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/laser500/laser500_bitmap_init_graphics.c
	mv laser500bm.bin $(BUILD_PATH)/TINY_laser500_bitmap.bin
	rm laser500bm.cas
	mv laser500bm.wav $(BUILD_PATH)/TINY_laser500_bitmap.wav


m5:
	$(Z88DK_PATH)$(MYZ88DK) +m5 $(SCCZ80_OPTS) \
	$(INCLUDE_OPTS) \
	-lm -create-app -Cz--audio -subtype=tape \
	-pragma-define:REGISTER_SP=65000 \
	-D__M5__ \
	-clib=ansi -pragma-define:ansicolumns=32 \
	-DFULL_GAME -DLESS_TEXT \
	-DBETWEEN_LEVEL -DEND_SCREEN \
	-DCONIO \
	-DSOUNDS \
	-DANIMATE_PLAYER \
	-DUDG_GRAPHICS \
	-clib=default -pragma-redirect:fputc_cons=fputc_cons_generic \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(CROSS_LIB_PATH)/display/graphics_data/z88dk/xchase.asm \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES) \
	-o$(BUILD_PATH)/FULL_m5.bin	
	rm $(BUILD_PATH)/FULL_m5.bin
	rm $(BUILD_PATH)/FULL_m5.cas


mc1000_16k_no_gfx:
	$(Z88DK_PATH)$(MYZ88DK) +mc1000 $(ZSDCC_OPTS) -compiler=sdcc $(INCLUDE_OPTS) \
	-subtype=gaming -pragma-define:ansicolumns=32 \
	-DFULL_GAME  \
	-DLESS_TEXT \
	-DNO_BLINKING \
	-DNO_HINTS \
	-clib=ansi \
	-D__MC1000__ -DSOUNDS \
	-DEND_SCREEN \
	-DALT_SLEEP \
	-DCONIO -DNO_INIT_GRAPHICS \
	-vn  -lndos -Cz--audio \
	-create-app -o mc1000ng.bin \
	$(CROSS_LIB_PATH)/sound/z88dk/psg/psg_sounds.c \
	$(CROSS_LIB_PATH)/sleep/sleep_macros.c \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES)
	mv mc1000ng.wav $(BUILD_PATH)/FULL_mc1000_16k_no_gfx.wav
	rm mc1000ng.bin
	rm mc1000ng.cas


mc1000_48k:
	$(Z88DK_PATH)$(MYZ88DK) +mc1000 $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-subtype=gaming \
	-DZ88DK_JOYSTICK \
	-DFULL_GAME  \
	-DANIMATE_PLAYER \
	-DUDG_GRAPHICS \
	-DSOUND \
	-D__MC1000__ -DSOUNDS -DEND_SCREEN -DBETWEEN_LEVEL \
	-DCONIO \
	-vn  -lndos -Cz--audio \
	-create-app -o mc1000.bin \
	-clib=default -pragma-redirect:fputc_cons=fputc_cons_generic \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(CROSS_LIB_PATH)/display/graphics_data/z88dk/xchase.asm \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES)
	mv mc1000.wav $(BUILD_PATH)/FULL_mc1000_48k_joystick.wav
	rm mc1000.bin
	rm mc1000.cas


microbee_16k_no_gfx:
	$(Z88DK_PATH)$(MYZ88DK) +bee $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-D__BEE__ -clib=ansi -vn -DSOUNDS  \
	-DCONIO -DNO_INIT_GRAPHICS \
	-lndos -create-app -o $(BUILD_PATH)/LIGHT_microbee_16k_no_gfx.prg  \
	$(LIGHT_FILES)
	rm $(BUILD_PATH)/LIGHT_microbee_16k_no_gfx.prg


microbee_32k:
	$(Z88DK_PATH)$(MYZ88DK) +bee $(SCCZ80_OPTS) -lgfxnc100 \
	$(INCLUDE_OPTS) \
	-D__NC100__ \
	-DALT_PRINT \
	-DFULL_GAME \
	-DZ88DK_SPRITES \
	-DLESS_TEXT \
	-DANIMATE_PLAYER \
	-create-app -o$(BUILD_PATH)/FULL_microbee_32k.bin \
	-DNO_INIT_GRAPHICS \
	-DINITIAL_GHOST_FREEZE \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	$(FULL_FILES)
	rm $(BUILD_PATH)/FULL_microbee_32k.bin


mikro80:
	$(Z88DK_PATH)$(MYZ88DK) +mikro80 $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-D__MIKRO80__ \
	-DFORCE_XSIZE=48 \
	-DFORCE_YSIZE=32 \
	-DNO_SET_SCREEN_COLORS \
	-DNO_COLOR \
	-DFULL_GAME  \
	-DCONIO_VT52 \
	-DCONIO \
	-lndos \
	-DNO_INIT_GRAPHICS \
	$(FULL_FILES) \
	-create-app -o$(BUILD_PATH)/FULL_mikro80.bin
	rm $(BUILD_PATH)/FULL_mikro80.bin


msx_32k_rom:
	$(Z88DK_PATH)$(MYZ88DK) +msx $(SCCZ80_OPTS) $(INCLUDE_OPTS) -lmsxbios \
	-DUSE_MSX_BIOS \
	-DINITIAL_SLOWDOWN=29000 \
	-DSOUNDS -DANIMATE_PLAYER \
	-vn -DMSX_VPOKE -DFULL_GAME -D__MSX__ -DEND_SCREEN -DBETWEEN_LEVEL \
	-lndos -subtype=rom \
	-create-app -o $(BUILD_PATH)/FULL_msx_32k.rom \
	-DMEMORY_MAPPED \
	-DDEFAULT_CLEAR_SCREEN \
	-DALT_PRINT \
	-DLESS_TEXT \
	-DZ88DK_JOYSTICK \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/msx/msx_redefined_chars_init_graphics.c	\
	$(CROSS_LIB_PATH)/sound/z88dk/psg/psg_sounds.c \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES)
	rm $(BUILD_PATH)/FULL_msx_32k_BSS.bin
	rm $(BUILD_PATH)/FULL_msx_32k_DATA.bin


mtx:
	$(Z88DK_PATH)$(MYZ88DK) +mtx $(SCCZ80_OPTS) -startup=2 $(INCLUDE_OPTS) \
	-D__MTX__ \
	-create-app -o MTX.bin -vn \
	-DFULL_GAME -DSOUNDS  -DEND_SCREEN -DBETWEEN_LEVEL \
	-DCONIO \
	-lndos \
	-DANIMATE_PLAYER \
	-DUDG_GRAPHICS \
	-clib=default -pragma-redirect:fputc_cons=fputc_cons_generic \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(CROSS_LIB_PATH)/display/graphics_data/z88dk/xchase.asm \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES)
	rm MTX.bin
	mv MTX.wav $(BUILD_PATH)/FULL_mtx.wav
	mv MTX $(BUILD_PATH)/FULL_mtx.mtx


multi8:
	$(Z88DK_PATH)$(MYZ88DK) +multi8 $(SCCZ80_OPTS) \
	$(INCLUDE_OPTS) \
	$(CROSS_LIB_PATH)/boot/multi8/bootstrap.c \
	-create-app -o bootstrap
	rm bootstrap
	$(Z88DK_PATH)$(MYZ88DK) +multi8 $(SCCZ80_OPTS) -subtype=64k \
	$(INCLUDE_OPTS) \
	-D__MULTI8__ \
	-DFULL_GAME  \
	-DEND_SCREEN -DBETWEEN_LEVEL \
	-DCONIO_VT52 \
	-DCONIO \
	-lndos \
	-DANIMATE_PLAYER \
	-DUDG_GRAPHICS \
	-DNO_HINTS \
	-DSIMPLE_STRATEGY \
	-DLESS_TEXT \
	-clib=default -pragma-redirect:fputc_cons=fputc_cons_generic \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(CROSS_LIB_PATH)/display/graphics_data/z88dk/xchase.asm \
	chase/end_screen.c \
	$(FULL_FILES) \
	-create-app -o code
	rm code
	cat bootstrap.cas code.cas > $(BUILD_PATH)/FULL_multi8.cas
	rm bootstrap.cas
	rm code.cas


myvision:
	$(Z88DK_PATH)$(MYZ88DK) +myvision $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-D__MYVISION__ \
	-DFORCE_XSIZE=32 \
	-DFORCE_YSIZE=24 \
	-DNO_SET_SCREEN_COLORS \
	-DNO_COLOR \
	-DFULL_GAME  \
	-DCONIO_VT52 \
	-DCONIO \
	-lndos \
	-DNO_INIT_GRAPHICS \
	$(FULL_FILES) \
	-create-app -o$(BUILD_PATH)/FULL_myvision.bin
	rm $(BUILD_PATH)/FULL_myvision.bin
	rm $(BUILD_PATH)/FULL_myvision_BSS.bin
	rm $(BUILD_PATH)/FULL_myvision_DATA.bin


mz:
	$(Z88DK_PATH)$(MYZ88DK) +mz $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-D__MZ__ -clib=ansi -pragma-define:ansicolumns=32 -vn \
	-DFULL_GAME -DSOUNDS  -DEND_SCREEN -DBETWEEN_LEVEL \
	-DCONIO -DNO_INIT_GRAPHICS \
	-pragma-define:REGISTER_SP=0xd000 \
	-lndos -create-app -o $(BUILD_PATH)/FULL_mz.prg \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES)
	rm $(BUILD_PATH)/FULL_mz.prg
	mv $(BUILD_PATH)/FULL_mz.mzt $(BUILD_PATH)/FULL_mz.mzf


# It almost works except for TURN_BASED
mz2500_tiny_buffered:
	$(Z88DK_PATH)$(MYZ88DK) +mz2500 $(ZSDCC_OPTS) \
	$(INCLUDE_OPTS) \
	-compiler=sdcc \
	-DFORCE_XSIZE=16 \
	-DFORCE_YSIZE=12 \
	-DFORCE_GHOSTS_NUMBER=6 \
	-DFORCE_BOMBS_NUMBER=4 \
	-D__MZ2500__ \
	-vn \
	-DNO_COLOR \
	-DTINY_GAME \
	-DNO_BLINKING \
	-DNO_CONTROL_INSTRUCTIONS \
	-DNO_DEAD_GHOSTS \
	-DNO_SLEEP \
	-DNO_INITIAL_SCREEN \
	-DNO_SET_SCREEN_COLORS \
	-lndos \
	-DBUFFERED -DNO_INIT_GRAPHICS \
	-DFORCE_NARROW \
	-DNO_STATS \
	-DALT_PRINT \
	-DDEFAULT_CLEAR_SCREEN \
	-DSTDLIB \
	-DNO_WAIT \
	-DTURN_BASED \
	-pragma-include:$(CFG_PATH)/z88dk/zpragma_clib.inc \
	$(TINY_FILES) \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	-create-app -o mz2500
	mv mz2500.dsk $(BUILD_PATH)/TINY_mz2500_buffered.dsk
	rm mz2500


