# ------------------------------------------------------------------------------------------
# Z88DK T-Z
#

z88dk_targets_t-z: \
	ti82_targets \
	ti83_targets \
	ti85_targets \
	ti86_targets \
	ti8x_targets \
	tiki100_targets \
	trs80_targets \
	ts2068_targets \
	tvc_targets \
	vector06c_targets \
	vg5k_targets \
	vz200_targets \
	x1_targets \
	z1013_targets \
	z80tvgame_targets \
	z88_targets \
	z9001_targets \
	zx80_targets \
	zx81_targets \
	zxn_targets



# ------------------------------------------------------------------------------------------

ti82_targets: \
	ti82

ti83_targets: \
	ti83

ti85_targets: \
	ti85
	
ti86_targets: \
	ti86_light

ti8x_targets: \
	ti8x

tiki100_targets: \
	tiki100

trs80_targets: \
	trs80 trs80_chars

ts2068_targets: \
	ts2068

tvc_targets: \
	tvc

vector06c_targets: \
	vector06c

vg5k_targets: \
	vg5k vg5k_exp_16k

vz200_targets: \
	vz200_8k vz200_18k vz200_sprites_18k

x1_targets: \
	x1

z1013_targets: \
	z1013

z80tvgame_targets: \
	z80tvgame

z88_targets: \
	z88

z9001_targets: \
	z9001_16k_full z9001_32k

zx80_targets: \
	zx80_16k_turn_based

zx81_targets_ijkl_spc: \
	zx81_16k zx81_32k_wrx_turn_based

zx81_targets: \
	zx81_targets_ijkl_spc

zxn_targets: \
	zxn


# ------------------------------------------------------------------------------------------


ti82:
	$(Z88DK_PATH)$(MYZ88DK) +ti82 $(SCCZ80_OPTS) \
	$(INCLUDE_OPTS) \
	-D__TI82__ \
	-DZ88DK_JOYSTICK \
	-DFULL_GAME \
	-vn -lndos \
	-DALT_PRINT \
	-DFORCE_NARROW \
	-DZ88DK_SPRITES -DNO_INIT_GRAPHICS \
	-DANIMATE_PLAYER \
	-DLESS_TEXT \
	-create-app -o ti82 \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	$(FULL_FILES)
	mv $(SOURCE_PATH)/../ti82.82p $(BUILD_PATH)/FULL_ti82.82p
	rm $(SOURCE_PATH)/../ti82


ti83:
	$(Z88DK_PATH)$(MYZ88DK) +ti83 $(SCCZ80_OPTS) \
	$(INCLUDE_OPTS) \
	-D__TI83__ \
	-DZ88DK_JOYSTICK \
	-DFULL_GAME \
	-vn -lndos \
	-DALT_PRINT \
	-DFORCE_NARROW \
	-DZ88DK_SPRITES -DNO_INIT_GRAPHICS \
	-DANIMATE_PLAYER \
	-DLESS_TEXT \
	-create-app -oxchase \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	$(FULL_FILES)
	mv $(SOURCE_PATH)/../xchase.83p $(BUILD_PATH)/FULL_ti83.83p
	rm $(SOURCE_PATH)/../xchase


ti85:
	$(Z88DK_PATH)$(MYZ88DK) +ti85 $(SCCZ80_OPTS) \
	$(INCLUDE_OPTS) \
	-D__TI85__ \
	-DZ88DK_JOYSTICK \
	-DFULL_GAME \
	-vn -lndos \
	-DALT_PRINT \
	-DFORCE_NARROW \
	-DZ88DK_SPRITES -DNO_INIT_GRAPHICS \
	-DANIMATE_PLAYER \
	-DLESS_TEXT \
	-create-app -oti85 \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	$(FULL_FILES)
	mv $(SOURCE_PATH)/../ti85.85s $(BUILD_PATH)/FULL_ti85.85s
	rm $(SOURCE_PATH)/../ti85


ti86_light:
	$(Z88DK_PATH)$(MYZ88DK) +ti86 $(SCCZ80_OPTS) \
	$(INCLUDE_OPTS) \
	-D__TI86__ \
	-DZ88DK_JOYSTICK \
	-DLESS_TEXT	\
	-DNO_COLOR \
	-DNO_BLINKING \
	-DNO_HINTS \
	-clib=ansi -pragma-define:ansicolumns=32 \
	-vn \
	-lndos \
	-DCONIO -DNO_INIT_GRAPHICS \
	-create-app  -oti86 \
	$(LIGHT_FILES)
	mv $(SOURCE_PATH)/../ti86.86p $(BUILD_PATH)/LIGHT_ti86.86p	
	rm $(SOURCE_PATH)/../ti86


ti8x:
	$(Z88DK_PATH)$(MYZ88DK) +ti8x $(SCCZ80_OPTS) -clib=ansi  -subtype=ion -Cz--altfmt \
	$(INCLUDE_OPTS) \
	-D__TI8X__ \
	-DZ88DK_JOYSTICK \
	-DFULL_GAME \
	-vn -lndos \
	-DALT_PRINT \
	-DFORCE_NARROW \
	-DZ88DK_SPRITES -DNO_INIT_GRAPHICS \
	-DANIMATE_PLAYER \
	-DLESS_TEXT \
	-create-app -oxchase8x \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	$(FULL_FILES)
	mv $(SOURCE_PATH)/../xchase8x.8xp $(BUILD_PATH)/FULL_ti8x.8xp	
	mv $(SOURCE_PATH)/../xchase8x $(BUILD_PATH)/FULL_ti8x.bin


tiki100: 
	$(Z88DK_PATH)$(MYZ88DK) +cpm $(SCCZ80_OPTS) -subtype=tiki100 -ltiki100 \
	$(INCLUDE_OPTS) \
	-D__TIKI100__ \
	-DALT_PRINT \
	-DFULL_GAME \
	-DZ88DK_SPRITES \
	-DLESS_TEXT \
	-DANIMATE_PLAYER \
	-DINITIAL_GHOST_FREEZE \
	-DNO_COLOR \
	-DALT_MOVE \
	-DNO_RANDOM_LEVEL \
	-DNO_SLEEP \
	-DNO_HINTS \
	-DNO_SET_SCREEN_COLORS \
	-create-app -o tiki100 \
	-DNO_INIT_GRAPHICS \
	$(FULL_FILES) \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c
	mv $(SOURCE_PATH)/../tiki100.dsk $(BUILD_PATH)/FULL_tiki100.dsk
	rm $(SOURCE_PATH)/../tiki100
	rm $(SOURCE_PATH)/../tiki100_HIMEM.bin


trs80:
	$(Z88DK_PATH)$(MYZ88DK) +trs80 $(SCCZ80_OPTS) -lndos -subtype=disk \
	$(INCLUDE_OPTS) $(ULTRA_DRAW_SKIP) \
	-pragma-redirect:getk=getk_inkey \
	-pragma-define:REGISTER_SP=0xffb5 \
	-D__TRS80__ \
	-DFULL_GAME \
	-vn -lndos \
	-DALT_PRINT \
	-DFORCE_NARROW \
	-DZ88DK_SPRITES -DNO_INIT_GRAPHICS \
	-DANIMATE_PLAYER \
	-DLESS_TEXT \
	-create-app \
	-DBETWEEN_LEVEL \
	-o$(BUILD_PATH)/FULL_trs80.bin \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	$(FULL_FILES)
	rm $(BUILD_PATH)/FULL_trs80.bin


trs80_chars:
	$(Z88DK_PATH)$(MYZ88DK) +trs80 $(SCCZ80_OPTS) -lndos -subtype=disk \
	$(INCLUDE_OPTS) \
	-lm -create-app \
	-D__TRS80__ \
	-pragma-redirect:getk=getk_inkey \
	-DFULL_GAME -DBETWEEN_LEVEL -DEND_SCREEN \
	-DCONIO_VT52 \
	-DCONIO -DNO_INIT_GRAPHICS \
	-o$(BUILD_PATH)/FULL_trs80_chars.bin \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES)
	rm $(BUILD_PATH)/FULL_trs80_chars.bin


ts2068:
	$(Z88DK_PATH)$(MYZ88DK) +ts2068 $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-clib=ansi \
	-D__TS2068__ \
	-DNO_COLOR \
	-vn \
	-DFULL_GAME \
	-DLESS_TEXT \
	-lndos \
	-DALT_PRINT \
	-DZ88DK_SPRITES \
	-DANIMATE_PLAYER \
	-DNO_INIT_GRAPHICS \
	-DBETWEEN_LEVEL -DEND_SCREEN \
	$(FULL_FILES) \
	$(SOURCE_PATH)/end_screen.c \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	-create-app -o $(BUILD_PATH)/FULL_ts2068.bin 
	rm $(BUILD_PATH)/FULL_ts2068.bin
	rm $(BUILD_PATH)/FULL_ts2068_BANK_7.bin


tvc:
	$(Z88DK_PATH)$(MYZ88DK) +tvc $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-D__TVC__ \
	-DFORCE_XSIZE=40 \
	-DFORCE_YSIZE=25 \
	-DNO_SET_SCREEN_COLORS \
	-DNO_COLOR \
	-DFULL_GAME  \
	-DCONIO_VT52 \
	-DCONIO \
	-lndos \
	-DNO_INIT_GRAPHICS \
	$(FULL_FILES) \
	-create-app -o$(BUILD_PATH)/FULL_tvc.bin
	rm $(BUILD_PATH)/FULL_tvc.bin


vector06c:
	$(Z88DK_PATH)$(MYZ88DK) +vector06c $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-D__VECTOR06C__ \
	-DFORCE_XSIZE=32 \
	-DFORCE_YSIZE=32 \
	-DNO_SET_SCREEN_COLORS \
	-DNO_COLOR \
	-DFULL_GAME  \
	-DCONIO_VT52 \
	-DCONIO \
	-lndos \
	-DNO_INIT_GRAPHICS \
	$(FULL_FILES) \
	-create-app -o$(BUILD_PATH)/FULL_vector06c.bin
	rm $(BUILD_PATH)/FULL_vector06c.bin


vg5k_exp_16k:
	$(Z88DK_PATH)$(MYZ88DK) +vg5k $(SCCZ80_OPTS) \
	$(INCLUDE_OPTS) \
	-DSOUNDS -vn -DFULL_GAME -D__VG5K__ -DBETWEEN_LEVEL -DEND_SCREEN -DASM_DISPLAY \
	-lndos -create-app -o $(BUILD_PATH)/FULL_vg5k_exp_16k.prg \
	-DCONIO \
	-DINITIAL_SLOWDOWN=29000 \
	-clib=default \
	-DUDG_GRAPHICS \
	-DANIMATE_PLAYER \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(CROSS_LIB_PATH)/display/graphics_data/z88dk/xchase.asm \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES)
	rm $(BUILD_PATH)/FULL_vg5k_exp_16k.prg


vg5k:
	$(Z88DK_PATH)$(MYZ88DK) +vg5k $(ZSDCC_OPTS) \
	-compiler=sdcc \
	$(INCLUDE_OPTS) \
	--reserve-regs-iy \
	-pragma-include:$(CFG_PATH)/z88dk/zpragma_clib.inc \
	-vn -DFULL_GAME -D__VG5K__ \
	-DINITIAL_SLOWDOWN=29000 \
	-DLESS_TEXT \
	-DUDG_GRAPHICS \
	-DANIMATE_PLAYER \
	-DFORCE_GHOSTS_NUMBER=8 \
	-DFORCE_BOMBS_NUMBER=4 \
	-DSOUNDS \
	-DSIMPLE_STRATEGY \
	-create-app -o $(BUILD_PATH)/FULL_vg5k_less_text.prg \
	-DCONIO \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(CROSS_LIB_PATH)/display/graphics_data/z88dk/xchase.asm \
	$(FULL_FILES)
	rm $(BUILD_PATH)/FULL_vg5k_less_text.prg


vz200_18k: 	
	$(Z88DK_PATH)$(MYZ88DK) +vz $(ZSDCC_OPTS) -vn \
	-compiler=sdcc \
	$(INCLUDE_OPTS) \
	-DSOUNDS -D__VZ__ -clib=ansi \
	-DFULL_GAME \
	-DINITIAL_SLOWDOWN=31500 \
	-DCONIO -DNO_INIT_GRAPHICS \
	-lndos \
	-create-app -o $(BUILD_PATH)/FULL_vz200_18k.vz \
	$(FULL_FILES)
	rm $(BUILD_PATH)/FULL_vz200_18k.cas


vz200_8k:
	$(Z88DK_PATH)$(MYZ88DK) +vz $(ZSDCC_OPTS) \
	-DTINY_GAME \
	-DINITIAL_SLOWDOWN=31500 \
	-pragma-include:$(CFG_PATH)/z88dk/zpragma.inc \
	-compiler=sdcc \
	--opt-code-size \
	$(INCLUDE_OPTS) \
	-D__VZ__ -clib=ansi \
	-DLESS_TEXT \
	-DNO_BLINKING \
	-DNO_RANDOM_LEVEL \
	-DNO_DEAD_GHOSTS \
	-DFORCE_GHOSTS_NUMBER=4 \
	-DFORCE_BOMBS_NUMBER=2 \
	-DNO_SET_SCREEN_COLORS \
	-DNO_STATS \
	-DNO_INITIAL_SCREEN \
	-DNO_MESSAGE \
	-lndos \
	-DCONIO -DNO_INIT_GRAPHICS \
	-create-app -o $(BUILD_PATH)/TINY_vz200_8k.vz \
	$(TINY_FILES) 
	rm $(BUILD_PATH)/TINY_vz200_8k.cas


vz200_sprites_18k:
	$(Z88DK_PATH)$(MYZ88DK) +vz $(SCCZ80_OPTS) \
	$(INCLUDE_OPTS) \
	-DSOUNDS \
	-DINITIAL_SLOWDOWN=31500 \
	-D__VZ__ \
	-DFULL_GAME \
	-create-app -o $(BUILD_PATH)/FULL_vz200_sprites_18k.vz \
	-vn -lndos \
	-DALT_PRINT \
	-DFORCE_NARROW \
	-DZ88DK_SPRITES -DNO_INIT_GRAPHICS \
	-DANIMATE_PLAYER \
	-DLESS_TEXT \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	$(FULL_FILES)
	rm $(BUILD_PATH)/FULL_vz200_sprites_18k.cas


x1:
	$(Z88DK_PATH)$(MYZ88DK) +x1 $(SCCZ80_OPTS) \
	$(INCLUDE_OPTS) \
	-D__X1__ \
	-DFULL_GAME \
	-DBETWEEN_LEVEL -DEND_SCREEN \
	-DCONIO -DNO_INIT_GRAPHICS \
	-create-app -o $(BUILD_PATH)/FULL_x1.bin -vn -lndos \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES)
	rm $(BUILD_PATH)/FULL_x1.bin


zx80_16k_turn_based:
	$(Z88DK_PATH)$(MYZ88DK) +zx80 $(SCCZ80_OPTS) $(INCLUDE_OPTS) -vn \
	-D__ZX80__ -DFULL_GAME \
	-DEND_SCREEN \
	-DTURN_BASED \
	-DALT_SLEEP \
	-DCONIO \
	-DNO_INIT_GRAPHICS \
	-lndos \
	-create-app -o  $(BUILD_PATH)/FULL_zx80_16k_turn_based.prg \
	$(CROSS_LIB_PATH)/sleep/sleep_macros.c \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES)
	rm $(BUILD_PATH)/FULL_zx80_16k_turn_based.prg


zx81_16k:
	$(Z88DK_PATH)$(MYZ88DK) +zx81 $(ZSDCC_OPTS) \
	$(INCLUDE_OPTS) \
	-compiler=sdcc \
	--opt-code-size \
	-vn \
	-D__ZX81__ -DFULL_GAME \
	-DEND_SCREEN -DBETWEEN_LEVEL \
	-DCONIO -DNO_INIT_GRAPHICS \
	-lndos \
	-create-app -o  $(BUILD_PATH)/FULL_zx81_16k.prg \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES)
	rm $(BUILD_PATH)/FULL_zx81_16k.prg


zx81_32k_wrx_turn_based:
	$(Z88DK_PATH)$(MYZ88DK) +zx81 $(SCCZ80_OPTS) -subtype=wrx -clib=wrx \
	$(INCLUDE_OPTS) \
	-pragma-include:$(CFG_PATH)/z88dk/zpragma_clib_no_printf.inc \
	-pragma-define:hrgpage=36096 \
	-DFORCE_GHOSTS_NUMBER=9 \
	-DANIMATE_PLAYER \
	-DNO_BLINKING \
	-DTURN_BASED \
	-DFORCE_XSIZE=36 \
	-DFORCE_YSIZE=35 \
	-vn \
	-D__ZX81__ \
	-DZ88DK_SPRITES \
	-DLESS_PRINT \
	-DFULL_GAME \
	-lndos \
	-DANIMATE_PLAYER \
	-DLESS_TEXT \
	-DNO_COLOR \
	-DSIMPLE_STRATEGY \
	-DNO_SET_SCREEN_COLORS \
	-DALT_PRINT \
	-DFEWER_SPRITES \
	-DNO_SMALL_LETTERS \
	-create-app -o  $(BUILD_PATH)/FULL_zx81_32k_wrx_turn_based.prg \
	$(FULL_FILES) \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/zx81/zx81_init_graphics.c \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c
	rm $(BUILD_PATH)/FULL_zx81_32k_wrx_turn_based.prg


z1013:
	$(Z88DK_PATH)$(MYZ88DK) +z1013 $(SCCZ80_OPTS) $(INCLUDE_OPTS) -clib=ansi \
	-vn -lndos \
	-D__Z1013__  -DFULL_GAME -DBETWEEN_LEVEL -DEND_SCREEN \
	-DCONIO -DNO_INIT_GRAPHICS \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES) \
	-create-app -o z1013
	mv $(SOURCE_PATH)/../Z1013.Z80 $(BUILD_PATH)/FULL_z1013.z80
	rm $(SOURCE_PATH)/../z1013


z80tvgame: 
	$(Z88DK_PATH)$(MYZ88DK) +z80tvgame $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-D__PASOPIA__ \
	-DNO_SET_SCREEN_COLORS \
	-DNO_COLOR \
	-DFULL_GAME  \
	-DCONIO_VT52 \
	-DCONIO \
	-lndos \
	-DNO_INIT_GRAPHICS \
	$(FULL_FILES) \
	-create-app -o$(BUILD_PATH)/FULL_z80tvgame.bin
	rm $(BUILD_PATH)/FULL_z80tvgame.bin
	rm $(BUILD_PATH)/FULL_z80tvgame_DATA.bin
	rm $(BUILD_PATH)/FULL_z80tvgame_BSS.bin


z88:
	$(Z88DK_PATH)$(MYZ88DK) +z88 $(SCCZ80_OPTS) -subtype=app \
	$(INCLUDE_OPTS) \
	-D__Z88__ \
	-DFULL_GAME \
	-vn -lndos \
	-DALT_PRINT \
	-DZ88DK_SPRITES \
	-DANIMATE_PLAYER \
	-DLESS_TEXT \
	-DNO_WAIT \
	-DNO_SLEEP \
	-DNO_COLOR \
	-DDEFAULT_CLEAR_SCREEN \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/z88/z88_init_graphics.c \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	$(FULL_FILES) \
	-create-app -o z88
	rm z88
	rm z88_BSS.bin
	rm z88_DATA.bin
	rm z88_bss_fardata.bin
	mv z88.63 $(BUILD_PATH)/FULL_z88.63
	mv z88.epr $(BUILD_PATH)/FULL_z88.epr


z9001_16k_full:
	$(Z88DK_PATH)$(MYZ88DK) +z9001 $(ZSDCC_OPTS) -compiler=sdcc $(INCLUDE_OPTS) -clib=ansi \
	-D__Z9001__ -vn -DFULL_GAME  \
	-DCONIO -DNO_INIT_GRAPHICS \
	-DLESS_TEXT \
	-DNO_BLINKING \
	-DNO_RANDOM_LEVEL \
	-DNO_HINTS \
	-DSIMPLE_STRATEGY \
	-lndos -create-app -o $(BUILD_PATH)/FULL_z9001_less_text.z80 \
	$(FULL_FILES)
	rm $(BUILD_PATH)/FULL_z9001_less_text.z80


z9001_32k:
	$(Z88DK_PATH)$(MYZ88DK) +z9001 $(SCCZ80_OPTS) $(INCLUDE_OPTS) -clib=ansi \
	-D__Z9001__ -vn -DFULL_GAME  -DEND_SCREEN -DBETWEEN_LEVEL \
	-DCONIO -DNO_INIT_GRAPHICS \
	-lndos -create-app -o $(BUILD_PATH)/FULL_z9001.z80 \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES)
	rm $(BUILD_PATH)/FULL_z9001.z80


zxn:
	$(Z88DK_PATH)$(MYZ88DK) +zxn $(SCCZ80_OPTS) -clib=classic -subtype=nex $(INCLUDE_OPTS) \
	-D__ZXN__ \
	-DFORCE_XSIZE=32 \
	-DFORCE_YSIZE=24 \
	-DNO_SET_SCREEN_COLORS \
	-DNO_COLOR \
	-DFULL_GAME  \
	-DCONIO_VT52 \
	-DCONIO \
	-lndos \
	-DNO_INIT_GRAPHICS \
	$(FULL_FILES) \
	-create-app -o$(BUILD_PATH)/FULL_zxn.bin
	rm $(BUILD_PATH)/FULL_zxn.bin
	rm $(BUILD_PATH)/FULL_zxn_UNASSIGNED.bin


