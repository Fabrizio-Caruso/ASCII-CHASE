# -----------------------------------------------
# Z88DK

z88dk_alt_targets_h-n: \
    lambda_alt_targets \
    m5_alt_targets \
    mc1000_alt_targets \
    microbee_alt_targets \
    msx_alt_targets \
    mtx_alt_targets \
    multi8_alt_targets \
    nascom_alt_targets 


#############################

lambda_alt_targets: \
    lambda_8k \
    lambda_light

m5_alt_targets: \
    m5_no_gfx \
    m5_tiny_no_gfx

mc1000_alt_targets: \
    mc1000_16k_light

microbee_alt_targets: \
    microbee_32k_no_gfx \
    microbee_32k_wav

msx_alt_targets: \
    msx_32k_cas

mtx_alt_targets: \
    mtx_no_gfx \
    mtx_16k_no_gfx

multi8_alt_targets: \
    multi8_light_udg \
    multi8_tiny_udg

nascom_alt_targets: \
    nascom_32k_turn_based

#############################
# LAMBDA
lambda_8k:
	$(Z88DK_PATH)$(MYZ88DK) +lambda $(SCCZ80_OPTS) $(INCLUDE_OPTS) -vn -D__LAMBDA__ -DTINY_GAME -DNO_SET_SCREEN_COLORS \
	-DLESS_TEXT -DNO_SLEEP -lndos -DCONIO -DNO_INIT_GRAPHICS \
	-create-app -o  $(BUILD_PATH)/ALT_TINY_lambda_8k.prg \
	$(TINY_FILES)
	rm $(BUILD_PATH)/ALT_TINY_lambda_8k.prg


lambda_light:
	$(Z88DK_PATH)$(MYZ88DK) +lambda $(SCCZ80_OPTS) -vn -D__LAMBDA__ -lndos -create-app -o  $(BUILD_PATH)/ALT_LIGHT_lambda.prg \
	$(INCLUDE_OPTS) $(LIGHT_FILES) -DCONIO -DNO_INIT_GRAPHICS
	rm $(BUILD_PATH)/ALT_LIGHT_lambda.prg


#############################
# M5
m5_no_gfx:
	$(Z88DK_PATH)$(MYZ88DK) +m5 $(SCCZ80_OPTS) \
	$(INCLUDE_OPTS) \
	-lm -create-app -Cz--audio -subtype=tape \
	-pragma-define:REGISTER_SP=65000 \
	-D__M5__ \
	-clib=ansi -pragma-define:ansicolumns=32 \
	-DFULL_GAME -DLESS_TEXT -DNO_SLEEP -DNO_WAIT \
	-DBETWEEN_LEVEL -DEND_SCREEN \
	-DCONIO -DNO_INIT_GRAPHICS \
	-o$(BUILD_PATH)/ALT_FULL_m5_no_gfx.bin \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES)
	rm $(BUILD_PATH)/ALT_FULL_m5_no_gfx.bin
	rm $(BUILD_PATH)/ALT_FULL_m5_no_gfx.cas


m5_tiny_no_gfx:
	$(Z88DK_PATH)$(MYZ88DK) +m5 $(SCCZ80_OPTS) \
	$(INCLUDE_OPTS) \
	-lm -create-app -Cz--audio -subtype=tape \
	-D__M5__ \
	-clib=ansi -pragma-define:ansicolumns=32 \
	-DTINY_GAME -DLESS_TEXT \
	-DCONIO -DNO_INIT_GRAPHICS \
	-o$(BUILD_PATH)/ALT_TINY_m5_no_gfx.bin \
	$(TINY_FILES)
	rm $(BUILD_PATH)/ALT_TINY_m5_no_gfx.bin
	rm $(BUILD_PATH)/ALT_TINY_m5_no_gfx.cas


#############################
# MC1000
mc1000_16k_light:
	$(Z88DK_PATH)$(MYZ88DK) +mc1000 $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-pragma-define:ansicolumns=32 -subtype=gaming -clib=ansi -D__MC1000__ -DSOUNDS -vn \
	 \
	-lndos -create-app -Cz--audio -DCONIO -DNO_INIT_GRAPHICS \
	$(LIGHT_FILES)
	mv a.wav $(BUILD_PATH)/ALT_LIGHT_mc1000_16k.wav
	rm a.bin
	rm a.cas


#############################
# MICRO
microbee_32k_no_gfx:
	$(Z88DK_PATH)$(MYZ88DK) +bee $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-D__BEE__ \
	-clib=ansi \
	-vn \
	-DFULL_GAME -DSOUNDS  -DEND_SCREEN -DBETWEEN_LEVEL \
	-DCONIO -DNO_INIT_GRAPHICS \
	-lndos -create-app -o $(BUILD_PATH)/ALT_FULL_microbee_32k_no_gfx.prg  \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES)
	rm $(BUILD_PATH)/ALT_FULL_microbee_32k_no_gfx.prg


microbee_32k_wav:
	$(Z88DK_PATH)$(MYZ88DK) +bee $(SCCZ80_OPTS) $(INCLUDE_OPTS) -subtype=wav \
	-D__BEE__ \
	-clib=ansi \
	-vn \
	-DFULL_GAME -DSOUNDS  -DEND_SCREEN -DBETWEEN_LEVEL \
	-DCONIO -DNO_INIT_GRAPHICS \
	-lndos -create-app -o $(BUILD_PATH)/ALT_FULL_microbee_32k_no_gfx.prg  \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES)
	rm $(BUILD_PATH)/ALT_FULL_microbee_32k_no_gfx.prg


#############################
# MSX
msx_32k_cas:
	$(Z88DK_PATH)$(MYZ88DK) +msx $(SCCZ80_ROM_OPTS) $(INCLUDE_OPTS) -lmsxbios \
	-DUSE_MSX_BIOS \
	-DINITIAL_SLOWDOWN=29000 \
	-DSOUNDS -DANIMATE_PLAYER \
	-vn -DMSX_VPOKE -DFULL_GAME -D__MSX__ -DEND_SCREEN -DBETWEEN_LEVEL \
	-lndos \
	-create-app -o $(BUILD_PATH)/ALT_FULL_msx_32k.prg \
	-DMEMORY_MAPPED \
	-DALT_PRINT \
	-DDEFAULT_CLEAR_SCREEN \
	-DLESS_TEXT \
	-DZ88DK_JOYSTICK \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/msx/msx_redefined_chars_init_graphics.c	\
	$(CROSS_LIB_PATH)/sound/z88dk/psg/psg_sounds.c \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES)
	rm $(BUILD_PATH)/ALT_FULL_msx_32k.prg 


#############################
# MTX
mtx_no_gfx:
	$(Z88DK_PATH)$(MYZ88DK) +mtx $(SCCZ80_OPTS) -startup=2 $(INCLUDE_OPTS) \
	-D__MTX__ -clib=ansi -pragma-define:ansicolumns=32 -create-app -o ALT_FULL_mtx_no_gfx.bin \
	-DFULL_GAME -DSOUNDS  -DEND_SCREEN -DBETWEEN_LEVEL \
	-DCONIO -DNO_INIT_GRAPHICS \
	-lndos \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES)
	rm ALT_FULL_mtx_no_gfx
	rm ALT_FULL_mtx_no_gfx.bin
	mv ALT_FULL_mtx_no_gfx.wav $(BUILD_PATH)/



# it may work
mtx_16k_no_gfx:
	$(Z88DK_PATH)$(MYZ88DK) +mtx $(SCCZ80_OPTS) -startup=2 $(INCLUDE_OPTS) -D__MTX__ \
	-clib=ansi -pragma-define:ansicolumns=32 -vn -DCONIO -DNO_INIT_GRAPHICS -lndos -create-app -o ALT_LIGHT_mtx_no_gfx.bin \
	$(LIGHT_FILES)
	rm ALT_LIGHT_mtx_no_gfx
	rm ALT_LIGHT_mtx_no_gfx.bin
	mv ALT_LIGHT_mtx_no_gfx.wav $(BUILD_PATH)


#############################
# MULTI
multi8_light_udg:
	$(Z88DK_PATH)$(MYZ88DK) +multi8 $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-D__MULTI8__ \
	-DCONIO_VT52 \
	-DCONIO \
	-lndos \
	-DANIMATE_PLAYER \
	-DUDG_GRAPHICS \
	-clib=default -pragma-redirect:fputc_cons=fputc_cons_generic \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(CROSS_LIB_PATH)/display/graphics_data/z88dk/xchase.asm \
	$(LIGHT_FILES) \
	-create-app -o$(BUILD_PATH)/ALT_LIGHT_multi8.bin
	rm $(BUILD_PATH)/ALT_LIGHT_multi8.bin		


multi8_tiny_udg:
	$(Z88DK_PATH)$(MYZ88DK) +multi8 $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-D__MULTI8__ \
	-DTINY_GAME  \
	-DCONIO_VT52 \
	-DCONIO \
	-lndos \
	-DANIMATE_PLAYER \
	-DUDG_GRAPHICS \
	-clib=default -pragma-redirect:fputc_cons=fputc_cons_generic \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(CROSS_LIB_PATH)/display/graphics_data/z88dk/xchase.asm \
	$(TINY_FILES) \
	-create-app -o$(BUILD_PATH)/ALT_TINY_multi8.bin
	rm $(BUILD_PATH)/ALT_TINY_multi8.bin


#############################
# NASCOM
nascom_32k_turn_based:
	$(Z88DK_PATH)$(MYZ88DK) +nascom $(SCCZ80_OPTS) $(INCLUDE_OPTS) -clib=ansi -vn -lndos \
	-D__NASCOM__ \
	-DTURN_BASED \
	-DSOUNDS \
	-DFULL_GAME \
	-DEND_SCREEN -DBETWEEN_LEVEL \
	-DCONIO -DNO_INIT_GRAPHICS \
	-lndos -create-app -o $(BUILD_PATH)/ALT_FULL_nascom_32k_turn_based.prg \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES)
	rm $(BUILD_PATH)/ALT_FULL_nascom_32k_turn_based.prg

