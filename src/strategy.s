;
; File generated by cc65 v 2.16 - Git 308f745
;
	.fopt		compiler,"cc65 v 2.16 - Git 308f745"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		__delete
	.import		_rand
	.export		_blindChaseCharacterXStrategy
	.export		_blindChaseCharacterYStrategy
	.export		_moveTowardCharacter
	.export		_computeStrategy
	.export		_chasePlayer
	.import		_level
	.import		_player
	.import		_ghosts
	.import		_strategyArray

; ---------------------------------------------------------------
; void __near__ blindChaseCharacterXStrategy (__near__ struct CharacterStruct *, __near__ struct CharacterStruct *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_blindChaseCharacterXStrategy: near

.segment	"CODE"

	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (ptr1,x)
	jsr     pusha0
	ldy     #$03
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (ptr1,x)
	jsr     tosicmp0
	bcs     L0004
	ldy     #$03
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     #$01
	clc
	adc     (ptr1),y
	jmp     L010D
L0004:	ldy     #$03
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (ptr1,x)
	jsr     pusha0
	ldy     #$03
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (ptr1,x)
	jsr     tosicmp0
	bcc     L0008
	beq     L0008
	ldy     #$03
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	jmp     L0110
L0008:	ldy     #$03
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	jsr     pusha0
	ldy     #$03
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	jsr     tosicmp0
	bcs     L000C
	ldy     #$03
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	tya
	clc
	adc     (ptr1),y
	jmp     L010D
L000C:	ldy     #$03
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$01
L0110:	lda     (ptr1),y
	sec
	sbc     #$01
L010D:	sta     (ptr1),y
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ blindChaseCharacterYStrategy (__near__ struct CharacterStruct *, __near__ struct CharacterStruct *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_blindChaseCharacterYStrategy: near

.segment	"CODE"

	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	jsr     pusha0
	ldy     #$03
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	jsr     tosicmp0
	bcs     L0012
	ldy     #$03
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	tya
	clc
	adc     (ptr1),y
	jmp     L0111
L0012:	ldy     #$03
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	jsr     pusha0
	ldy     #$03
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	jsr     tosicmp0
	bcc     L0016
	beq     L0016
	ldy     #$03
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	jmp     L0114
L0016:	ldy     #$03
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (ptr1,x)
	jsr     pusha0
	ldy     #$03
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (ptr1,x)
	jsr     tosicmp0
	bcs     L001A
	ldy     #$03
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     #$01
	clc
	adc     (ptr1),y
	jmp     L0111
L001A:	ldy     #$03
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
L0114:	lda     (ptr1),y
	sec
	sbc     #$01
L0111:	sta     (ptr1),y
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ moveTowardCharacter (__near__ struct CharacterStruct *, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_moveTowardCharacter: near

.segment	"CODE"

	jsr     pusha
	jsr     _rand
	jsr     pushax
	ldx     #$00
	lda     #$0A
	jsr     tosmoda0
	sec
	ldy     #$00
	sbc     (sp),y
	sta     tmp1
	txa
	sbc     #$00
	ora     tmp1
	bcc     L0020
	beq     L0020
	ldy     #$04
	jsr     pushwysp
	lda     #<(_player)
	ldx     #>(_player)
	jsr     _blindChaseCharacterXStrategy
	jmp     incsp3
L0020:	ldy     #$04
	jsr     pushwysp
	lda     #<(_player)
	ldx     #>(_player)
	jsr     _blindChaseCharacterYStrategy
	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; void __near__ computeStrategy (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_computeStrategy: near

.segment	"CODE"

	jsr     decsp1
	lda     _level
	cmp     #$01
	beq     L0122
	cmp     #$02
	beq     L0122
	cmp     #$03
	beq     L0122
	cmp     #$04
	beq     L0122
	cmp     #$05
	beq     L0122
	cmp     #$06
	beq     L0123
	cmp     #$07
	beq     L0123
	cmp     #$08
	beq     L0123
	cmp     #$09
	beq     L0123
	cmp     #$0A
	beq     L0123
	cmp     #$0B
	jeq     L0126
	cmp     #$0C
	jeq     L0126
	cmp     #$0D
	jeq     L0126
	cmp     #$0E
	jeq     L0126
	cmp     #$0F
	jeq     L0126
	cmp     #$10
	jeq     L0129
	cmp     #$11
	jeq     L0129
	cmp     #$12
	jeq     L0129
	cmp     #$13
	jeq     L0129
	cmp     #$14
	jeq     L0129
	jmp     L012C
L0122:	lda     #$00
	tay
L0115:	sta     (sp),y
	cmp     #$08
	bcc     L012F
	jmp     incsp1
L012F:	lda     (sp),y
	tay
	lda     #$04
	sta     _strategyArray,y
	ldy     #$00
	clc
	lda     #$01
	adc     (sp),y
	jmp     L0115
L0123:	lda     #$00
	tay
L0116:	sta     (sp),y
	cmp     #$05
	bcs     L0124
	lda     (sp),y
	tay
	lda     #$04
	sta     _strategyArray,y
	ldy     #$00
	clc
	lda     #$01
	adc     (sp),y
	jmp     L0116
L0124:	lda     #$05
L0117:	sta     (sp),y
	cmp     #$07
	bcs     L0125
	lda     (sp),y
	tay
	lda     #$03
	sta     _strategyArray,y
	ldy     #$00
	clc
	lda     #$01
	adc     (sp),y
	jmp     L0117
L0125:	lda     #$07
L0118:	sta     (sp),y
	cmp     #$08
	bcc     L0130
	jmp     incsp1
L0130:	lda     (sp),y
	tay
	lda     #$05
	sta     _strategyArray,y
	ldy     #$00
	clc
	lda     #$01
	adc     (sp),y
	jmp     L0118
L0126:	lda     #$00
	tay
L0119:	sta     (sp),y
	cmp     #$05
	bcs     L0127
	lda     (sp),y
	tay
	lda     #$04
	sta     _strategyArray,y
	ldy     #$00
	clc
	lda     #$01
	adc     (sp),y
	jmp     L0119
L0127:	lda     #$05
L011A:	sta     (sp),y
	cmp     #$07
	bcs     L0128
	lda     (sp),y
	tay
	lda     #$02
	sta     _strategyArray,y
	ldy     #$00
	clc
	lda     #$01
	adc     (sp),y
	jmp     L011A
L0128:	lda     #$07
L011B:	sta     (sp),y
	cmp     #$08
	bcc     L0131
	jmp     incsp1
L0131:	lda     (sp),y
	tay
	lda     #$06
	sta     _strategyArray,y
	ldy     #$00
	clc
	lda     #$01
	adc     (sp),y
	jmp     L011B
L0129:	lda     #$00
	tay
L011C:	sta     (sp),y
	cmp     #$05
	bcs     L012A
	lda     (sp),y
	tay
	lda     #$04
	sta     _strategyArray,y
	ldy     #$00
	clc
	lda     #$01
	adc     (sp),y
	jmp     L011C
L012A:	lda     #$05
L011D:	sta     (sp),y
	cmp     #$07
	bcs     L012B
	lda     (sp),y
	tay
	lda     #$01
	sta     _strategyArray,y
	ldy     #$00
	clc
	adc     (sp),y
	jmp     L011D
L012B:	lda     #$07
L011E:	sta     (sp),y
	cmp     #$08
	bcs     L002C
	lda     (sp),y
	tay
	lda     #$07
	sta     _strategyArray,y
	ldy     #$00
	clc
	lda     #$01
	adc     (sp),y
	jmp     L011E
L012C:	lda     #$00
	tay
L011F:	sta     (sp),y
	cmp     #$02
	bcs     L012D
	lda     (sp),y
	tay
	lda     #$04
	sta     _strategyArray,y
	ldy     #$00
	clc
	lda     #$01
	adc     (sp),y
	jmp     L011F
L012D:	lda     #$02
L0120:	sta     (sp),y
	cmp     #$05
	bcs     L012E
	lda     (sp),y
	tay
	lda     #$01
	sta     _strategyArray,y
	ldy     #$00
	clc
	adc     (sp),y
	jmp     L0120
L012E:	lda     #$05
L0121:	sta     (sp),y
	cmp     #$08
	bcs     L002C
	lda     (sp),y
	tay
	lda     #$07
	sta     _strategyArray,y
	ldy     #$00
	clc
	lda     #$01
	adc     (sp),y
	jmp     L0121
L002C:	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ chasePlayer (unsigned short)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_chasePlayer: near

.segment	"CODE"

	jsr     pushax
	jsr     decsp1
	lda     #$00
	tay
L0132:	sta     (sp),y
	cmp     #$08
	bcc     L0135
	jmp     incsp3
L0135:	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	clc
	adc     #<(_ghosts)
	sta     ptr1
	txa
	adc     #>(_ghosts)
	sta     ptr1+1
	ldy     #$02
	lda     (ptr1),y
	beq     L00F5
	jsr     _rand
	sec
	ldy     #$01
	sbc     (sp),y
	sta     tmp1
	txa
	iny
	sbc     (sp),y
	ora     tmp1
	beq     L00F5
	bcc     L00F5
	ldx     #$00
	lda     (sp,x)
	jsr     mulax5
	sta     ptr1
	txa
	clc
	adc     #>(_ghosts)
	sta     ptr1+1
	ldy     #<(_ghosts)
	lda     (ptr1),y
	jsr     pusha
	ldy     #$01
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	clc
	adc     #<(_ghosts)
	sta     ptr1
	txa
	adc     #>(_ghosts)
	sta     ptr1+1
	lda     (ptr1),y
	jsr     __delete
	ldx     #$00
	lda     (sp,x)
	jsr     mulax5
	clc
	adc     #<(_ghosts)
	tay
	txa
	adc     #>(_ghosts)
	tax
	tya
	jsr     pushax
	ldy     #$02
	lda     (sp),y
	tay
	lda     _strategyArray,y
	jsr     _moveTowardCharacter
L00F5:	ldy     #$00
	clc
	lda     #$01
	adc     (sp),y
	jmp     L0132

.endproc

